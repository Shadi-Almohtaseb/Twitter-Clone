import {
  collection,
  doc,
  onSnapshot,
  orderBy,
  query,
} from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { db } from "../../firebase.config";
import Post from "../../src/components/main/Post";
import Widgets from "../../src/components/rightBar/Widgets";
import SideBar from "../../src/components/sideBar/SideBar";
import CommentModal from "../../src/components/CommentModal";
import Header from "../../src/components/main/Header";
import BottomNavigationBar from "../../src/components/main/BottomNavigationBar";
import { UserAuth } from "../../src/context/AuthContext";
import { AnimatePresence, motion } from "framer-motion";
import emptyImage from "../../src/assets/Images/empty.png";
import Image from "next/image";
import Link from "next/link";
import { ArrowLeftIcon } from "@heroicons/react/24/outline";

const MySavedPosts = ({ NewsData, UsersData }) => {
  const router = useRouter();
  const { Post_Id } = router.query;
  const [posts, setPosts] = useState([]);
  const [savedPostId, setSavedPostId] = useState([]);
  const { userIn } = UserAuth();

  useEffect(
    () =>
      onSnapshot(
        query(collection(db, "posts"), orderBy("timeStamp", "desc")),
        (snapshot) => {
          setPosts(snapshot.docs);
        }
      ),
    []
  );

  useEffect(
    () =>
      onSnapshot(doc(db, "users", userIn?.uid), (snapshot) => {
        setSavedPostId(snapshot?.data()?.userSavedPosts);
      }),

    [db]
  );

  return (
    <div>
      <Head>
        <title>Saved Posts</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen mx-auto bg-[#f0f2f5]">
        <SideBar />
        <div className="flex flex-col lg:w-[45%] md:w-[50%] w-full lg:ml-[25%] sm:ml-[65px] border-l-[1px]">
          <div className="h-[8vh] gap-3 px-5 bg-white flex items-center border-b-2 sticky top-0 bg-opacity-70 backdrop-blur-lg z-10">
            <Link
              href="/"
              className="p-2 m-1 hover:bg-slate-100 rounded-full transition-all"
            >
              <ArrowLeftIcon hanging={30} width={30} />
            </Link>
            <div className="flex flex-col">
              <span className="text-xl font-bold">Saved Tweets</span>
              <span
                className={`text-gray-700 ${
                  savedPostId?.length === 0 ||
                  (savedPostId?.length === undefined && "hidden")
                }`}
              >
                {savedPostId?.length}
                {savedPostId?.length >= 2 ? " Tweets" : " Tweet"}
              </span>
            </div>
          </div>
          {savedPostId?.length <= 0 ||
            (savedPostId?.length === undefined && (
              <div className="flex items-center justify-center flex-col mt-10">
                <span className="text-2xl">No posts are saved yet!</span>
                <Image src={emptyImage} alt="img" width={400} height={400} />
              </div>
            ))}
          <AnimatePresence>
            {posts
              .filter((post, index) => savedPostId?.includes(post.id))
              .map((post) => {
                return (
                  <motion.div
                    key={post.id}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 1.3 }}
                  >
                    <Post post={post} key={post.id} />
                  </motion.div>
                );
              })}
          </AnimatePresence>
          <BottomNavigationBar />
        </div>
        <Widgets NewsData={NewsData} UsersData={UsersData} />
        <CommentModal />
      </main>
    </div>
  );
};

export async function getServerSideProps(context) {
  const [NewsAPI, UsersAPI] = await Promise.all([
    fetch(`https://saurav.tech/NewsAPI/top-headlines/category/health/in.json`, {
      cache: "no-store",
    }),
    fetch(`https://randomuser.me/api/?results=70`, {
      cache: "no-store",
    }),
  ]);

  const [NewsData, UsersData] = await Promise.all([
    NewsAPI.json(),
    UsersAPI.json(),
  ]);

  // Pass NewsData to the page via props
  return {
    props: { NewsData, UsersData }, // will be passed to the page component as props
  };
}

export default MySavedPosts;
